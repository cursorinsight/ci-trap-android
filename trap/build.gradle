plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'org.jetbrains.dokka'
    id 'jacoco'
}

group 'com.cursorinsight.trap'
version '1.0'

kotlin {
    android {
        namespace 'com.cursorinsight.trap'
        compileSdk 33

        defaultConfig {
            minSdk 24
            //noinspection OldTargetApi
            targetSdk 33

            aarMetadata {
                minCompileSdk 29
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = '1.8'
        }

        buildFeatures {
            buildConfig = true
        }

        buildTypes {
            debug {
                testCoverageEnabled true
            }
            release { }
        }

        testOptions {
            unitTests.all {
                useJUnitPlatform()
            }
        }

        tasks.named("dokkaHtml") {
            suppressInheritedMembers = true
            outputDirectory.set(buildDir.toPath().resolve("../../public").toFile())
        }

        publishing {
            singleVariant('release') {

            }
        }
    }
}

jacoco {
    toolVersion = "0.8.10"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses true
    jacoco.excludes = ['jdk.internal.*']
    finalizedBy jacocoUnitTestReport
}

tasks.register('jacocoUnitTestReport', JacocoReport) {
    dependsOn['testDebugUnitTest']

    reports {
        csv.required = false
        html.required = false
        xml.required = true
    }

    // Add files that should not be listed in the report (e.g. generated Files from dagger)
    def fileFilter = []

    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)

    def mainSrc = "$projectDir/src/main/java"
    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([kotlinDebugTree])

    // Make sure the path is correct (if not run the unit tests and try find the .exec file that is generated after the unit tests are finished should be similar to that one)
    executionData.from = fileTree(dir: "$buildDir", includes: ["outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"])
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.cursorinsight'
            artifactId = 'trap'
            version = '1.0'

            afterEvaluate {
                from components.release
            }
        }
    }

    repositories {
        maven {
            name = "TrapRepo"
            url = layout.buildDirectory.dir("repo")
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'org.java-websocket:Java-WebSocket:1.5.4'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testImplementation "io.mockk:mockk:1.13.7"
    androidTestImplementation "io.mockk:mockk-android:1.13.7"

    //noinspection GradleDynamicVersion
    dokkaPlugin 'org.jetbrains.dokka:android-documentation-plugin:1.9.0'
}